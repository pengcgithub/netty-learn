new NioEventLoopGroup()
  -->NioEventLoopGroup()
    -->NioEventLoopGroup(int nThreads)
	  -->NioEventLoopGroup(int nThreads, Executor executor)
	  -->SelectorProvider.provider() // SelectorProvider定义了创建selector、ServerSocketChannel、SocketChannel等方法
	    -->NioEventLoopGroup(int nThreads, Executor executor, final SelectorProvider selectorProvider)
		  -->NioEventLoopGroup(int nThreads, Executor executor, final SelectorProvider selectorProvider, final SelectStrategyFactory selectStrategyFactory)
		  -->super(nThreads, executor, selectorProvider, selectStrategyFactory, RejectedExecutionHandlers.reject()) 
		    -->RejectedExecutionHandlers#reject() // RejectedExecutionHandlers.reject()执行线程池拒绝策略，参考：https://blog.csdn.net/qq_37107215/article/details/88343766
		      -->MultithreadEventLoopGroup#MultithreadEventLoopGroup(int nThreads, Executor executor, Object... args)
			  -->super(nThreads == 0 ? DEFAULT_EVENT_LOOP_THREADS : nThreads, executor, args) // DEFAULT_EVENT_LOOP_THREADS 默认计算机内核数 * 2
			    -->MultithreadEventExecutorGroup#MultithreadEventExecutorGroup(int nThreads, Executor executor, Object... args)
				-->this(nThreads, executor, DefaultEventExecutorChooserFactory.INSTANCE, args)
				  -->MultithreadEventExecutorGroup#MultithreadEventExecutorGroup(int nThreads, Executor executor, EventExecutorChooserFactory chooserFactory, Object... args)
				    -->new ThreadPerTaskExecutor(newDefaultThreadFactory())
					  -->MultithreadEventLoopGroup#newDefaultThreadFactory()
					    -->DefaultThreadFactory#DefaultThreadFactory(Class<?> poolType, int priority)
						-->this(poolType, false, priority)
						  -->DefaultThreadFactory#DefaultThreadFactory(Class<?> poolType, boolean daemon, int priority)
						  -->this(toPoolName(poolType), daemon, priority)
						    **DefaultThreadFactory#toPoolName(Class<?> poolType) // 获取当前类的名称作为线程的名称
						    -->DefaultThreadFactory(String poolName, boolean daemon, int priority)
							-->this(poolName, daemon, priority, System.getSecurityManager() == null ? Thread.currentThread().getThreadGroup() : System.getSecurityManager().getThreadGroup())
							  -->DefaultThreadFactory#DefaultThreadFactory(String poolName, boolean daemon, int priority, ThreadGroup threadGroup)
							  // 设置DefaultThreadFactory中基础的参数
				    -->new EventExecutor[nThreads]
					-->NioEventLoopGroup#newChild(Executor executor, Object... args)
					
							  
							  